/* Generated by restful-react */

import React from 'react';
import { Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';

export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;

export type IsTenantAvailableInput = {
  tenancyName: string;
} | null;

export type TenantAvailabilityState = number;

export type IsTenantAvailableOutput = {
  state?: TenantAvailabilityState;
  tenantId?: number | null;
} | null;

export type ValidationErrorInfo = {
  message?: string | null;
  members?: string | null[] | null;
} | null;

export type ErrorInfo = {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
} | null;

export type IsTenantAvailableOutputAjaxResponse = {
  result?: IsTenantAvailableOutput;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type AjaxResponseBase = {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type RegisterInput = {
  name: string;
  surname: string;
  userName: string;
  emailAddress: string;
  password: string;
  captchaResponse?: string | null;
} | null;

export type RegisterOutput = {
  canLogin?: boolean;
} | null;

export type RegisterOutputAjaxResponse = {
  result?: RegisterOutput;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type AccountIsTenantAvailableProps = Omit<
  MutateProps<IsTenantAvailableOutputAjaxResponse, AjaxResponseBase, void, IsTenantAvailableInput>,
  'path' | 'verb'
>;

export const AccountIsTenantAvailable = (props: AccountIsTenantAvailableProps) => (
  <Mutate<IsTenantAvailableOutputAjaxResponse, AjaxResponseBase, void, IsTenantAvailableInput>
    verb="POST"
    path={`/api/services/app/Account/IsTenantAvailable`}
    {...props}
  />
);

export type UseAccountIsTenantAvailableProps = Omit<
  UseMutateProps<IsTenantAvailableOutputAjaxResponse, void, IsTenantAvailableInput>,
  'path' | 'verb'
>;

export const useAccountIsTenantAvailable = (props: UseAccountIsTenantAvailableProps) =>
  useMutate<IsTenantAvailableOutputAjaxResponse, AjaxResponseBase, void, IsTenantAvailableInput>(
    'POST',
    `/api/services/app/Account/IsTenantAvailable`,
    props
  );

export type AccountRegisterProps = Omit<
  MutateProps<RegisterOutputAjaxResponse, AjaxResponseBase, void, RegisterInput>,
  'path' | 'verb'
>;

export const AccountRegister = (props: AccountRegisterProps) => (
  <Mutate<RegisterOutputAjaxResponse, AjaxResponseBase, void, RegisterInput>
    verb="POST"
    path={`/api/services/app/Account/Register`}
    {...props}
  />
);

export type UseAccountRegisterProps = Omit<
  UseMutateProps<RegisterOutputAjaxResponse, void, RegisterInput>,
  'path' | 'verb'
>;

export const useAccountRegister = (props: UseAccountRegisterProps) =>
  useMutate<RegisterOutputAjaxResponse, AjaxResponseBase, void, RegisterInput>(
    'POST',
    `/api/services/app/Account/Register`,
    props
  );
