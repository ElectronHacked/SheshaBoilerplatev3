/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';

export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;

export type SmtpSettingsDto = {
  host?: string | null;
  port?: number;
  userName?: string | null;
  password?: string | null;
  domain?: string | null;
  enableSsl?: boolean;
  useDefaultCredentials?: boolean;
} | null;

export type ValidationErrorInfo = {
  message?: string | null;
  members?: string | null[] | null;
} | null;

export type ErrorInfo = {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
} | null;

export type BooleanAjaxResponse = {
  result?: boolean;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type AjaxResponseBase = {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type SmtpSettingsDtoAjaxResponse = {
  result?: SmtpSettingsDto;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type SendTestEmailInput = {
  to: string;
  subject: string;
  body: string;
} | null;

export type SendTestEmailDto = {
  success?: boolean;
} | null;

export type SendTestEmailDtoAjaxResponse = {
  result?: SendTestEmailDto;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type EmailSenderUpdateSmtpSettingsProps = Omit<
  MutateProps<BooleanAjaxResponse, AjaxResponseBase, void, SmtpSettingsDto>,
  'path' | 'verb'
>;

export const EmailSenderUpdateSmtpSettings = (props: EmailSenderUpdateSmtpSettingsProps) => (
  <Mutate<BooleanAjaxResponse, AjaxResponseBase, void, SmtpSettingsDto>
    verb="POST"
    path={`/api/services/app/EmailSender/UpdateSmtpSettings`}
    {...props}
  />
);

export type UseEmailSenderUpdateSmtpSettingsProps = Omit<
  UseMutateProps<BooleanAjaxResponse, void, SmtpSettingsDto>,
  'path' | 'verb'
>;

export const useEmailSenderUpdateSmtpSettings = (props: UseEmailSenderUpdateSmtpSettingsProps) =>
  useMutate<BooleanAjaxResponse, AjaxResponseBase, void, SmtpSettingsDto>(
    'POST',
    `/api/services/app/EmailSender/UpdateSmtpSettings`,
    props
  );

export type EmailSenderGetSmtpSettingsProps = Omit<
  GetProps<SmtpSettingsDtoAjaxResponse, AjaxResponseBase, void>,
  'path'
>;

export const EmailSenderGetSmtpSettings = (props: EmailSenderGetSmtpSettingsProps) => (
  <Get<SmtpSettingsDtoAjaxResponse, AjaxResponseBase, void>
    path={`/api/services/app/EmailSender/GetSmtpSettings`}
    {...props}
  />
);

export type UseEmailSenderGetSmtpSettingsProps = Omit<UseGetProps<SmtpSettingsDtoAjaxResponse, void>, 'path'>;

export const useEmailSenderGetSmtpSettings = (props: UseEmailSenderGetSmtpSettingsProps) =>
  useGet<SmtpSettingsDtoAjaxResponse, AjaxResponseBase, void>(`/api/services/app/EmailSender/GetSmtpSettings`, props);

export type EmailSenderSendEmailProps = Omit<
  MutateProps<SendTestEmailDtoAjaxResponse, AjaxResponseBase, void, SendTestEmailInput>,
  'path' | 'verb'
>;

export const EmailSenderSendEmail = (props: EmailSenderSendEmailProps) => (
  <Mutate<SendTestEmailDtoAjaxResponse, AjaxResponseBase, void, SendTestEmailInput>
    verb="POST"
    path={`/api/services/app/EmailSender/SendEmail`}
    {...props}
  />
);

export type UseEmailSenderSendEmailProps = Omit<
  UseMutateProps<SendTestEmailDtoAjaxResponse, void, SendTestEmailInput>,
  'path' | 'verb'
>;

export const useEmailSenderSendEmail = (props: UseEmailSenderSendEmailProps) =>
  useMutate<SendTestEmailDtoAjaxResponse, AjaxResponseBase, void, SendTestEmailInput>(
    'POST',
    `/api/services/app/EmailSender/SendEmail`,
    props
  );
