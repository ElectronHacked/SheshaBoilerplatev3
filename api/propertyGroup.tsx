/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';

export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;

export type AutocompleteItemDto = {
  value?: string | null;
  displayText?: string | null;
} | null;

export type ValidationErrorInfo = {
  message?: string | null;
  members?: string | null[] | null;
} | null;

export type ErrorInfo = {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
} | null;

export type AutocompleteItemDtoListAjaxResponse = {
  result?: AutocompleteItemDto[] | null;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type AjaxResponseBase = {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type ReferenceListItemValueDto = {
  item?: string | null;
  itemValue?: number | null;
} | null;

export type GuidNullableEntityWithDisplayNameDto = {
  displayText?: string | null;
  id?: string | null;
} | null;

export type PropertyGroupDto = {
  name?: string | null;
  suburb?: string | null;
  propertyGroupType?: ReferenceListItemValueDto;
  areaLevel1?: GuidNullableEntityWithDisplayNameDto;
  areaLevel2?: GuidNullableEntityWithDisplayNameDto;
  areaLevel3?: GuidNullableEntityWithDisplayNameDto;
  areaLevel4?: GuidNullableEntityWithDisplayNameDto;
  streetName?: string | null;
  lat?: number | null;
  long?: number | null;
  numProperties?: number;
  numMeters?: number;
  id?: string;
} | null;

export type PropertyGroupDtoAjaxResponse = {
  result?: PropertyGroupDto;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type PropertyGroupDtoPagedResultDto = {
  totalCount?: number;
  items?: PropertyGroupDto[] | null;
} | null;

export type PropertyGroupDtoPagedResultDtoAjaxResponse = {
  result?: PropertyGroupDtoPagedResultDto;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export interface PropertyGroupAutocompleteQueryParams {
  term?: string | null;
}

export type PropertyGroupAutocompleteProps = Omit<
  GetProps<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, PropertyGroupAutocompleteQueryParams>,
  'path'
>;

export const PropertyGroupAutocomplete = (props: PropertyGroupAutocompleteProps) => (
  <Get<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, PropertyGroupAutocompleteQueryParams>
    path={`/api/services/propertyInspection/PropertyGroup/Autocomplete`}
    {...props}
  />
);

export type UsePropertyGroupAutocompleteProps = Omit<
  UseGetProps<AutocompleteItemDtoListAjaxResponse, PropertyGroupAutocompleteQueryParams>,
  'path'
>;

export const usePropertyGroupAutocomplete = (props: UsePropertyGroupAutocompleteProps) =>
  useGet<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, PropertyGroupAutocompleteQueryParams>(
    `/api/services/propertyInspection/PropertyGroup/Autocomplete`,
    props
  );

export interface PropertyGroupGetQueryParams {
  Id?: string;
}

export type PropertyGroupGetProps = Omit<
  GetProps<PropertyGroupDtoAjaxResponse, AjaxResponseBase, PropertyGroupGetQueryParams>,
  'path'
>;

export const PropertyGroupGet = (props: PropertyGroupGetProps) => (
  <Get<PropertyGroupDtoAjaxResponse, AjaxResponseBase, PropertyGroupGetQueryParams>
    path={`/api/services/propertyInspection/PropertyGroup/Get`}
    {...props}
  />
);

export type UsePropertyGroupGetProps = Omit<
  UseGetProps<PropertyGroupDtoAjaxResponse, PropertyGroupGetQueryParams>,
  'path'
>;

export const usePropertyGroupGet = (props: UsePropertyGroupGetProps) =>
  useGet<PropertyGroupDtoAjaxResponse, AjaxResponseBase, PropertyGroupGetQueryParams>(
    `/api/services/propertyInspection/PropertyGroup/Get`,
    props
  );

export interface PropertyGroupGetAllQueryParams {
  Sorting?: string | null;
  SkipCount?: number;
  MaxResultCount?: number;
}

export type PropertyGroupGetAllProps = Omit<
  GetProps<PropertyGroupDtoPagedResultDtoAjaxResponse, AjaxResponseBase, PropertyGroupGetAllQueryParams>,
  'path'
>;

export const PropertyGroupGetAll = (props: PropertyGroupGetAllProps) => (
  <Get<PropertyGroupDtoPagedResultDtoAjaxResponse, AjaxResponseBase, PropertyGroupGetAllQueryParams>
    path={`/api/services/propertyInspection/PropertyGroup/GetAll`}
    {...props}
  />
);

export type UsePropertyGroupGetAllProps = Omit<
  UseGetProps<PropertyGroupDtoPagedResultDtoAjaxResponse, PropertyGroupGetAllQueryParams>,
  'path'
>;

export const usePropertyGroupGetAll = (props: UsePropertyGroupGetAllProps) =>
  useGet<PropertyGroupDtoPagedResultDtoAjaxResponse, AjaxResponseBase, PropertyGroupGetAllQueryParams>(
    `/api/services/propertyInspection/PropertyGroup/GetAll`,
    props
  );

export type PropertyGroupCreateProps = Omit<
  MutateProps<PropertyGroupDtoAjaxResponse, AjaxResponseBase, void, PropertyGroupDto>,
  'path' | 'verb'
>;

export const PropertyGroupCreate = (props: PropertyGroupCreateProps) => (
  <Mutate<PropertyGroupDtoAjaxResponse, AjaxResponseBase, void, PropertyGroupDto>
    verb="POST"
    path={`/api/services/propertyInspection/PropertyGroup/Create`}
    {...props}
  />
);

export type UsePropertyGroupCreateProps = Omit<
  UseMutateProps<PropertyGroupDtoAjaxResponse, void, PropertyGroupDto>,
  'path' | 'verb'
>;

export const usePropertyGroupCreate = (props: UsePropertyGroupCreateProps) =>
  useMutate<PropertyGroupDtoAjaxResponse, AjaxResponseBase, void, PropertyGroupDto>(
    'POST',
    `/api/services/propertyInspection/PropertyGroup/Create`,
    props
  );

export type PropertyGroupUpdateProps = Omit<
  MutateProps<PropertyGroupDtoAjaxResponse, AjaxResponseBase, void, PropertyGroupDto>,
  'path' | 'verb'
>;

export const PropertyGroupUpdate = (props: PropertyGroupUpdateProps) => (
  <Mutate<PropertyGroupDtoAjaxResponse, AjaxResponseBase, void, PropertyGroupDto>
    verb="PUT"
    path={`/api/services/propertyInspection/PropertyGroup/Update`}
    {...props}
  />
);

export type UsePropertyGroupUpdateProps = Omit<
  UseMutateProps<PropertyGroupDtoAjaxResponse, void, PropertyGroupDto>,
  'path' | 'verb'
>;

export const usePropertyGroupUpdate = (props: UsePropertyGroupUpdateProps) =>
  useMutate<PropertyGroupDtoAjaxResponse, AjaxResponseBase, void, PropertyGroupDto>(
    'PUT',
    `/api/services/propertyInspection/PropertyGroup/Update`,
    props
  );

export interface PropertyGroupDeleteQueryParams {
  Id?: string;
}

export type PropertyGroupDeleteProps = Omit<
  MutateProps<void, unknown, PropertyGroupDeleteQueryParams, void>,
  'path' | 'verb'
>;

export const PropertyGroupDelete = (props: PropertyGroupDeleteProps) => (
  <Mutate<void, unknown, PropertyGroupDeleteQueryParams, void>
    verb="DELETE"
    path={`/api/services/propertyInspection/PropertyGroup/Delete`}
    {...props}
  />
);

export type UsePropertyGroupDeleteProps = Omit<
  UseMutateProps<void, PropertyGroupDeleteQueryParams, void>,
  'path' | 'verb'
>;

export const usePropertyGroupDelete = (props: UsePropertyGroupDeleteProps) =>
  useMutate<void, unknown, PropertyGroupDeleteQueryParams, void>(
    'DELETE',
    `/api/services/propertyInspection/PropertyGroup/Delete`,
    props
  );
