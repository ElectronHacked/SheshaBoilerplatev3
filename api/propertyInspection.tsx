/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';

export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;

export type RefListCheckInResultNullable = number | null;

export type InspectorDto = {
  fullName?: string | null;
  shortName?: string | null;
  userName?: string | null;
  id?: string;
} | null;

export type RefListAccessResultNullable = number | null;

export type RefListVisitTypeNullable = number | null;

export type PropertyVisitDto = {
  checkInLat?: number | null;
  checkInLong?: number | null;
  checkInTimestamp?: string | null;
  checkInResult?: RefListCheckInResultNullable;
  completedBy?: InspectorDto;
  completedDate?: string | null;
  accessResult?: RefListAccessResultNullable;
  noAccessRef?: string | null;
  visitType?: RefListVisitTypeNullable;
  notes?: string | null;
  id?: string;
} | null;

export type ValidationErrorInfo = {
  message?: string | null;
  members?: string | null[] | null;
} | null;

export type ErrorInfo = {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
} | null;

export type PropertyVisitDtoAjaxResponse = {
  result?: PropertyVisitDto;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type AjaxResponseBase = {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type ReferenceListItemValueDto = {
  item?: string | null;
  itemValue?: number | null;
} | null;

export type GuidNullableEntityWithDisplayNameDto = {
  displayText?: string | null;
  id?: string | null;
} | null;

export type AreaDto = {
  name?: string | null;
  shortName?: string | null;
  parentArea?: GuidNullableEntityWithDisplayNameDto;
  comments?: string | null;
  areaType?: ReferenceListItemValueDto;
  id?: string;
} | null;

export type InspectionTeamDto = {
  teamLead?: InspectorDto;
  name?: string | null;
  areaLevel1?: AreaDto;
  id?: string;
} | null;

export type PropertyInspectionDetailsDto = {
  status?: ReferenceListItemValueDto;
  refNo?: string | null;
  statusUpdatedDate?: string | null;
  assignedTo?: InspectorDto;
  team?: InspectionTeamDto;
  transformer?: string | null;
  notes?: string | null;
  revisitAppointmentNotes?: string | null;
  revisitAppointmentDate?: string | null;
  revisitAppointmentEndDate?: string | null;
  revisitAppointmentStatus?: ReferenceListItemValueDto;
  region?: GuidNullableEntityWithDisplayNameDto;
  area?: GuidNullableEntityWithDisplayNameDto;
  suburb?: GuidNullableEntityWithDisplayNameDto;
  buildingComplexName?: string | null;
  unitNo?: string | null;
  erfNo?: string | null;
  streetName?: string | null;
  streetNumber?: string | null;
  locationDescription?: string | null;
  lat?: number | null;
  long?: number | null;
  propertyType?: ReferenceListItemValueDto;
  occupantType?: ReferenceListItemValueDto;
  title?: string | null;
  firstname?: string | null;
  lastname?: string | null;
  idNumber?: string | null;
  mobileNumber?: string | null;
  id?: string;
} | null;

export type PropertyInspectionDetailsDtoAjaxResponse = {
  result?: PropertyInspectionDetailsDto;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type RefListPropertyInspectionStatus = number;

export type RefListInspectionAppointmentStatusNullable = number | null;

export type PropertyInspectionDto = {
  orderIndex?: number;
  refNo?: string | null;
  status?: RefListPropertyInspectionStatus;
  statusUpdatedDate?: string | null;
  assignedTo?: InspectorDto;
  notes?: string | null;
  revisitAppointmentDate?: string | null;
  revisitAppointmentEndDate?: string | null;
  revisitAppointmentStatus?: RefListInspectionAppointmentStatusNullable;
  batchId?: string | null;
  id?: string;
} | null;

export type PropertyInspectionDtoAjaxResponse = {
  result?: PropertyInspectionDto;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type StoredFileDto = {
  error?: string | null;
  id?: string | null;
  name?: string | null;
  fileCategory?: number | null;
  url?: string | null;
  size?: number;
  type?: string | null;
} | null;

export type StoredFileDtoListAjaxResponse = {
  result?: StoredFileDto[] | null;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type UpdateRevisitInput = {
  propertyInspectionId?: string;
  revisitAppointmentDate?: string;
  revisitAppointmentEndDate?: string;
  revisitAppointmentNotes?: string | null;
} | null;

export type PropertyInspectionDtoPagedResultDto = {
  totalCount?: number;
  items?: PropertyInspectionDto[] | null;
} | null;

export type PropertyInspectionDtoPagedResultDtoAjaxResponse = {
  result?: PropertyInspectionDtoPagedResultDto;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type PropertyInspectionCreateDto = {
  orderIndex?: number;
  status?: RefListPropertyInspectionStatus;
  statusUpdatedDate?: string | null;
  assignedTo?: InspectorDto;
  notes?: string | null;
  revisitAppointmentDate?: string | null;
  revisitAppointmentStatus?: RefListInspectionAppointmentStatusNullable;
} | null;

export interface PropertyInspectionGetLastVisitQueryParams {
  id?: string;
}

export type PropertyInspectionGetLastVisitProps = Omit<
  GetProps<PropertyVisitDtoAjaxResponse, AjaxResponseBase, PropertyInspectionGetLastVisitQueryParams>,
  'path'
>;

export const PropertyInspectionGetLastVisit = (props: PropertyInspectionGetLastVisitProps) => (
  <Get<PropertyVisitDtoAjaxResponse, AjaxResponseBase, PropertyInspectionGetLastVisitQueryParams>
    path={`/api/services/propertyInspection/PropertyInspection/GetLastVisit`}
    {...props}
  />
);

export type UsePropertyInspectionGetLastVisitProps = Omit<
  UseGetProps<PropertyVisitDtoAjaxResponse, PropertyInspectionGetLastVisitQueryParams>,
  'path'
>;

export const usePropertyInspectionGetLastVisit = (props: UsePropertyInspectionGetLastVisitProps) =>
  useGet<PropertyVisitDtoAjaxResponse, AjaxResponseBase, PropertyInspectionGetLastVisitQueryParams>(
    `/api/services/propertyInspection/PropertyInspection/GetLastVisit`,
    props
  );

export interface PropertyInspectionGetDetailsQueryParams {
  Id?: string;
}

export type PropertyInspectionGetDetailsProps = Omit<
  GetProps<PropertyInspectionDetailsDtoAjaxResponse, AjaxResponseBase, PropertyInspectionGetDetailsQueryParams>,
  'path'
>;

export const PropertyInspectionGetDetails = (props: PropertyInspectionGetDetailsProps) => (
  <Get<PropertyInspectionDetailsDtoAjaxResponse, AjaxResponseBase, PropertyInspectionGetDetailsQueryParams>
    path={`/api/services/propertyInspection/PropertyInspection/GetDetails`}
    {...props}
  />
);

export type UsePropertyInspectionGetDetailsProps = Omit<
  UseGetProps<PropertyInspectionDetailsDtoAjaxResponse, PropertyInspectionGetDetailsQueryParams>,
  'path'
>;

export const usePropertyInspectionGetDetails = (props: UsePropertyInspectionGetDetailsProps) =>
  useGet<PropertyInspectionDetailsDtoAjaxResponse, AjaxResponseBase, PropertyInspectionGetDetailsQueryParams>(
    `/api/services/propertyInspection/PropertyInspection/GetDetails`,
    props
  );

export type PropertyInspectionUpdateProps = Omit<
  MutateProps<PropertyInspectionDtoAjaxResponse, AjaxResponseBase, void, PropertyInspectionDetailsDto>,
  'path' | 'verb'
>;

export const PropertyInspectionUpdate = (props: PropertyInspectionUpdateProps) => (
  <Mutate<PropertyInspectionDtoAjaxResponse, AjaxResponseBase, void, PropertyInspectionDetailsDto>
    verb="PUT"
    path={`/api/services/propertyInspection/PropertyInspection/Update`}
    {...props}
  />
);

export type UsePropertyInspectionUpdateProps = Omit<
  UseMutateProps<PropertyInspectionDtoAjaxResponse, void, PropertyInspectionDetailsDto>,
  'path' | 'verb'
>;

export const usePropertyInspectionUpdate = (props: UsePropertyInspectionUpdateProps) =>
  useMutate<PropertyInspectionDtoAjaxResponse, AjaxResponseBase, void, PropertyInspectionDetailsDto>(
    'PUT',
    `/api/services/propertyInspection/PropertyInspection/Update`,
    props
  );

export interface PropertyInspectionGetVisitsPhotosQueryParams {
  Id?: string;
}

export type PropertyInspectionGetVisitsPhotosProps = Omit<
  GetProps<StoredFileDtoListAjaxResponse, AjaxResponseBase, PropertyInspectionGetVisitsPhotosQueryParams>,
  'path'
>;

export const PropertyInspectionGetVisitsPhotos = (props: PropertyInspectionGetVisitsPhotosProps) => (
  <Get<StoredFileDtoListAjaxResponse, AjaxResponseBase, PropertyInspectionGetVisitsPhotosQueryParams>
    path={`/api/services/propertyInspection/PropertyInspection/GetVisitsPhotos`}
    {...props}
  />
);

export type UsePropertyInspectionGetVisitsPhotosProps = Omit<
  UseGetProps<StoredFileDtoListAjaxResponse, PropertyInspectionGetVisitsPhotosQueryParams>,
  'path'
>;

export const usePropertyInspectionGetVisitsPhotos = (props: UsePropertyInspectionGetVisitsPhotosProps) =>
  useGet<StoredFileDtoListAjaxResponse, AjaxResponseBase, PropertyInspectionGetVisitsPhotosQueryParams>(
    `/api/services/propertyInspection/PropertyInspection/GetVisitsPhotos`,
    props
  );

export interface PropertyInspectionGetMeterInspectionsPhotosQueryParams {
  Id?: string;
}

export type PropertyInspectionGetMeterInspectionsPhotosProps = Omit<
  GetProps<StoredFileDtoListAjaxResponse, AjaxResponseBase, PropertyInspectionGetMeterInspectionsPhotosQueryParams>,
  'path'
>;

export const PropertyInspectionGetMeterInspectionsPhotos = (
  props: PropertyInspectionGetMeterInspectionsPhotosProps
) => (
  <Get<StoredFileDtoListAjaxResponse, AjaxResponseBase, PropertyInspectionGetMeterInspectionsPhotosQueryParams>
    path={`/api/services/propertyInspection/PropertyInspection/GetMeterInspectionsPhotos`}
    {...props}
  />
);

export type UsePropertyInspectionGetMeterInspectionsPhotosProps = Omit<
  UseGetProps<StoredFileDtoListAjaxResponse, PropertyInspectionGetMeterInspectionsPhotosQueryParams>,
  'path'
>;

export const usePropertyInspectionGetMeterInspectionsPhotos = (
  props: UsePropertyInspectionGetMeterInspectionsPhotosProps
) =>
  useGet<StoredFileDtoListAjaxResponse, AjaxResponseBase, PropertyInspectionGetMeterInspectionsPhotosQueryParams>(
    `/api/services/propertyInspection/PropertyInspection/GetMeterInspectionsPhotos`,
    props
  );

export type PropertyInspectionUpdateRevisitProps = Omit<
  MutateProps<void, unknown, void, UpdateRevisitInput>,
  'path' | 'verb'
>;

export const PropertyInspectionUpdateRevisit = (props: PropertyInspectionUpdateRevisitProps) => (
  <Mutate<void, unknown, void, UpdateRevisitInput>
    verb="POST"
    path={`/api/services/propertyInspection/PropertyInspection/UpdateRevisit`}
    {...props}
  />
);

export type UsePropertyInspectionUpdateRevisitProps = Omit<
  UseMutateProps<void, void, UpdateRevisitInput>,
  'path' | 'verb'
>;

export const usePropertyInspectionUpdateRevisit = (props: UsePropertyInspectionUpdateRevisitProps) =>
  useMutate<void, unknown, void, UpdateRevisitInput>(
    'POST',
    `/api/services/propertyInspection/PropertyInspection/UpdateRevisit`,
    props
  );

export interface PropertyInspectionGetQueryParams {
  Id?: string;
}

export type PropertyInspectionGetProps = Omit<
  GetProps<PropertyInspectionDtoAjaxResponse, AjaxResponseBase, PropertyInspectionGetQueryParams>,
  'path'
>;

export const PropertyInspectionGet = (props: PropertyInspectionGetProps) => (
  <Get<PropertyInspectionDtoAjaxResponse, AjaxResponseBase, PropertyInspectionGetQueryParams>
    path={`/api/services/propertyInspection/PropertyInspection/Get`}
    {...props}
  />
);

export type UsePropertyInspectionGetProps = Omit<
  UseGetProps<PropertyInspectionDtoAjaxResponse, PropertyInspectionGetQueryParams>,
  'path'
>;

export const usePropertyInspectionGet = (props: UsePropertyInspectionGetProps) =>
  useGet<PropertyInspectionDtoAjaxResponse, AjaxResponseBase, PropertyInspectionGetQueryParams>(
    `/api/services/propertyInspection/PropertyInspection/Get`,
    props
  );

export interface PropertyInspectionGetAllQueryParams {
  Sorting?: string | null;
  SkipCount?: number;
  MaxResultCount?: number;
}

export type PropertyInspectionGetAllProps = Omit<
  GetProps<PropertyInspectionDtoPagedResultDtoAjaxResponse, AjaxResponseBase, PropertyInspectionGetAllQueryParams>,
  'path'
>;

export const PropertyInspectionGetAll = (props: PropertyInspectionGetAllProps) => (
  <Get<PropertyInspectionDtoPagedResultDtoAjaxResponse, AjaxResponseBase, PropertyInspectionGetAllQueryParams>
    path={`/api/services/propertyInspection/PropertyInspection/GetAll`}
    {...props}
  />
);

export type UsePropertyInspectionGetAllProps = Omit<
  UseGetProps<PropertyInspectionDtoPagedResultDtoAjaxResponse, PropertyInspectionGetAllQueryParams>,
  'path'
>;

export const usePropertyInspectionGetAll = (props: UsePropertyInspectionGetAllProps) =>
  useGet<PropertyInspectionDtoPagedResultDtoAjaxResponse, AjaxResponseBase, PropertyInspectionGetAllQueryParams>(
    `/api/services/propertyInspection/PropertyInspection/GetAll`,
    props
  );

export type PropertyInspectionCreateProps = Omit<
  MutateProps<PropertyInspectionDtoAjaxResponse, AjaxResponseBase, void, PropertyInspectionCreateDto>,
  'path' | 'verb'
>;

export const PropertyInspectionCreate = (props: PropertyInspectionCreateProps) => (
  <Mutate<PropertyInspectionDtoAjaxResponse, AjaxResponseBase, void, PropertyInspectionCreateDto>
    verb="POST"
    path={`/api/services/propertyInspection/PropertyInspection/Create`}
    {...props}
  />
);

export type UsePropertyInspectionCreateProps = Omit<
  UseMutateProps<PropertyInspectionDtoAjaxResponse, void, PropertyInspectionCreateDto>,
  'path' | 'verb'
>;

export const usePropertyInspectionCreate = (props: UsePropertyInspectionCreateProps) =>
  useMutate<PropertyInspectionDtoAjaxResponse, AjaxResponseBase, void, PropertyInspectionCreateDto>(
    'POST',
    `/api/services/propertyInspection/PropertyInspection/Create`,
    props
  );

export interface PropertyInspectionDeleteQueryParams {
  Id?: string;
}

export type PropertyInspectionDeleteProps = Omit<
  MutateProps<void, unknown, PropertyInspectionDeleteQueryParams, void>,
  'path' | 'verb'
>;

export const PropertyInspectionDelete = (props: PropertyInspectionDeleteProps) => (
  <Mutate<void, unknown, PropertyInspectionDeleteQueryParams, void>
    verb="DELETE"
    path={`/api/services/propertyInspection/PropertyInspection/Delete`}
    {...props}
  />
);

export type UsePropertyInspectionDeleteProps = Omit<
  UseMutateProps<void, PropertyInspectionDeleteQueryParams, void>,
  'path' | 'verb'
>;

export const usePropertyInspectionDelete = (props: UsePropertyInspectionDeleteProps) =>
  useMutate<void, unknown, PropertyInspectionDeleteQueryParams, void>(
    'DELETE',
    `/api/services/propertyInspection/PropertyInspection/Delete`,
    props
  );
