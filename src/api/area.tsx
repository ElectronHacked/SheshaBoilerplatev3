/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';

export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;

export type RefListAreaTypeNullable = number | null;

export type AutocompleteItemDto = {
  value?: string | null;
  displayText?: string | null;
} | null;

export type ValidationErrorInfo = {
  message?: string | null;
  members?: string | null[] | null;
} | null;

export type ErrorInfo = {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
} | null;

export type AutocompleteItemDtoListAjaxResponse = {
  result?: AutocompleteItemDto[] | null;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type AjaxResponseBase = {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type ReferenceListItemValueDto = {
  item?: string | null;
  itemValue?: number | null;
} | null;

export type AreaUpdateDto = {
  name?: string | null;
  shortName?: string | null;
  comments?: string | null;
  areaType?: ReferenceListItemValueDto;
  id?: string;
} | null;

export type GuidNullableEntityWithDisplayNameDto = {
  displayText?: string | null;
  id?: string | null;
} | null;

export type AreaDto = {
  name?: string | null;
  shortName?: string | null;
  parentArea?: GuidNullableEntityWithDisplayNameDto;
  comments?: string | null;
  areaType?: ReferenceListItemValueDto;
  id?: string;
} | null;

export type AreaDtoAjaxResponse = {
  result?: AreaDto;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type GetChildAreasInput = {
  id?: string | null;
} | null;

export type AreaTreeItemDto = {
  name?: string | null;
  parentId?: string | null;
  hasChilds?: boolean;
  id?: string;
} | null;

export type AreaTreeItemDtoListAjaxResponse = {
  result?: AreaTreeItemDto[] | null;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type GuidEntityDto = {
  id?: string;
} | null;

export type AreaTreeItemDtoAjaxResponse = {
  result?: AreaTreeItemDto;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type MoveAreaInput = {
  id?: string;
  newParentId?: string | null;
} | null;

export type AreaCreateDto = {
  name?: string | null;
  shortName?: string | null;
  parentArea?: GuidNullableEntityWithDisplayNameDto;
  comments?: string | null;
  areaType?: ReferenceListItemValueDto;
} | null;

export type AreaDtoPagedResultDto = {
  totalCount?: number;
  items?: AreaDto[] | null;
} | null;

export type AreaDtoPagedResultDtoAjaxResponse = {
  result?: AreaDtoPagedResultDto;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export interface AreaAutocompleteQueryParams {
  term?: string | null;
  areaType?: RefListAreaTypeNullable;
  parentAreaId?: string | null;
}

export type AreaAutocompleteProps = Omit<
  GetProps<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaAutocompleteQueryParams>,
  'path'
>;

export const AreaAutocomplete = (props: AreaAutocompleteProps) => (
  <Get<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaAutocompleteQueryParams>
    path={`/api/services/app/Area/Autocomplete`}
    {...props}
  />
);

export type UseAreaAutocompleteProps = Omit<
  UseGetProps<AutocompleteItemDtoListAjaxResponse, AreaAutocompleteQueryParams>,
  'path'
>;

export const useAreaAutocomplete = (props: UseAreaAutocompleteProps) =>
  useGet<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaAutocompleteQueryParams>(
    `/api/services/app/Area/Autocomplete`,
    props
  );

export type AreaUpdateProps = Omit<
  MutateProps<AreaDtoAjaxResponse, AjaxResponseBase, void, AreaUpdateDto>,
  'path' | 'verb'
>;

export const AreaUpdate = (props: AreaUpdateProps) => (
  <Mutate<AreaDtoAjaxResponse, AjaxResponseBase, void, AreaUpdateDto>
    verb="PUT"
    path={`/api/services/app/Area/Update`}
    {...props}
  />
);

export type UseAreaUpdateProps = Omit<UseMutateProps<AreaDtoAjaxResponse, void, AreaUpdateDto>, 'path' | 'verb'>;

export const useAreaUpdate = (props: UseAreaUpdateProps) =>
  useMutate<AreaDtoAjaxResponse, AjaxResponseBase, void, AreaUpdateDto>('PUT', `/api/services/app/Area/Update`, props);

export interface AreaGetQueryParams {
  Id?: string;
}

export type AreaGetProps = Omit<GetProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaGetQueryParams>, 'path'>;

export const AreaGet = (props: AreaGetProps) => (
  <Get<AreaDtoAjaxResponse, AjaxResponseBase, AreaGetQueryParams> path={`/api/services/app/Area/Get`} {...props} />
);

export type UseAreaGetProps = Omit<UseGetProps<AreaDtoAjaxResponse, AreaGetQueryParams>, 'path'>;

export const useAreaGet = (props: UseAreaGetProps) =>
  useGet<AreaDtoAjaxResponse, AjaxResponseBase, AreaGetQueryParams>(`/api/services/app/Area/Get`, props);

export type AreaGetChildTreeItemsProps = Omit<
  MutateProps<AreaTreeItemDtoListAjaxResponse, AjaxResponseBase, void, GetChildAreasInput>,
  'path' | 'verb'
>;

export const AreaGetChildTreeItems = (props: AreaGetChildTreeItemsProps) => (
  <Mutate<AreaTreeItemDtoListAjaxResponse, AjaxResponseBase, void, GetChildAreasInput>
    verb="POST"
    path={`/api/services/app/Area/GetChildTreeItems`}
    {...props}
  />
);

export type UseAreaGetChildTreeItemsProps = Omit<
  UseMutateProps<AreaTreeItemDtoListAjaxResponse, void, GetChildAreasInput>,
  'path' | 'verb'
>;

export const useAreaGetChildTreeItems = (props: UseAreaGetChildTreeItemsProps) =>
  useMutate<AreaTreeItemDtoListAjaxResponse, AjaxResponseBase, void, GetChildAreasInput>(
    'POST',
    `/api/services/app/Area/GetChildTreeItems`,
    props
  );

export type AreaGetTreeItemProps = Omit<
  MutateProps<AreaTreeItemDtoAjaxResponse, AjaxResponseBase, void, GuidEntityDto>,
  'path' | 'verb'
>;

export const AreaGetTreeItem = (props: AreaGetTreeItemProps) => (
  <Mutate<AreaTreeItemDtoAjaxResponse, AjaxResponseBase, void, GuidEntityDto>
    verb="POST"
    path={`/api/services/app/Area/GetTreeItem`}
    {...props}
  />
);

export type UseAreaGetTreeItemProps = Omit<
  UseMutateProps<AreaTreeItemDtoAjaxResponse, void, GuidEntityDto>,
  'path' | 'verb'
>;

export const useAreaGetTreeItem = (props: UseAreaGetTreeItemProps) =>
  useMutate<AreaTreeItemDtoAjaxResponse, AjaxResponseBase, void, GuidEntityDto>(
    'POST',
    `/api/services/app/Area/GetTreeItem`,
    props
  );

export type AreaDeleteProps = Omit<MutateProps<void, unknown, void, GuidEntityDto>, 'path' | 'verb'>;

export const AreaDelete = (props: AreaDeleteProps) => (
  <Mutate<void, unknown, void, GuidEntityDto> verb="POST" path={`/api/services/app/Area/Delete`} {...props} />
);

export type UseAreaDeleteProps = Omit<UseMutateProps<void, void, GuidEntityDto>, 'path' | 'verb'>;

export const useAreaDelete = (props: UseAreaDeleteProps) =>
  useMutate<void, unknown, void, GuidEntityDto>('POST', `/api/services/app/Area/Delete`, props);

export type AreaMoveAreaProps = Omit<MutateProps<void, unknown, void, MoveAreaInput>, 'path' | 'verb'>;

export const AreaMoveArea = (props: AreaMoveAreaProps) => (
  <Mutate<void, unknown, void, MoveAreaInput> verb="POST" path={`/api/services/app/Area/MoveArea`} {...props} />
);

export type UseAreaMoveAreaProps = Omit<UseMutateProps<void, void, MoveAreaInput>, 'path' | 'verb'>;

export const useAreaMoveArea = (props: UseAreaMoveAreaProps) =>
  useMutate<void, unknown, void, MoveAreaInput>('POST', `/api/services/app/Area/MoveArea`, props);

export type AreaCreateProps = Omit<
  MutateProps<AreaDtoAjaxResponse, AjaxResponseBase, void, AreaCreateDto>,
  'path' | 'verb'
>;

export const AreaCreate = (props: AreaCreateProps) => (
  <Mutate<AreaDtoAjaxResponse, AjaxResponseBase, void, AreaCreateDto>
    verb="POST"
    path={`/api/services/app/Area/Create`}
    {...props}
  />
);

export type UseAreaCreateProps = Omit<UseMutateProps<AreaDtoAjaxResponse, void, AreaCreateDto>, 'path' | 'verb'>;

export const useAreaCreate = (props: UseAreaCreateProps) =>
  useMutate<AreaDtoAjaxResponse, AjaxResponseBase, void, AreaCreateDto>('POST', `/api/services/app/Area/Create`, props);

export interface AreaGetAllQueryParams {
  Sorting?: string | null;
  SkipCount?: number;
  MaxResultCount?: number;
}

export type AreaGetAllProps = Omit<
  GetProps<AreaDtoPagedResultDtoAjaxResponse, AjaxResponseBase, AreaGetAllQueryParams>,
  'path'
>;

export const AreaGetAll = (props: AreaGetAllProps) => (
  <Get<AreaDtoPagedResultDtoAjaxResponse, AjaxResponseBase, AreaGetAllQueryParams>
    path={`/api/services/app/Area/GetAll`}
    {...props}
  />
);

export type UseAreaGetAllProps = Omit<UseGetProps<AreaDtoPagedResultDtoAjaxResponse, AreaGetAllQueryParams>, 'path'>;

export const useAreaGetAll = (props: UseAreaGetAllProps) =>
  useGet<AreaDtoPagedResultDtoAjaxResponse, AjaxResponseBase, AreaGetAllQueryParams>(
    `/api/services/app/Area/GetAll`,
    props
  );
