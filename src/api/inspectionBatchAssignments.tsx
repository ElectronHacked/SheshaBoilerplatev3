/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';

export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;

export type GuidNullableEntityWithDisplayNameDto = {
  displayText?: string | null;
  id?: string | null;
} | null;

export type InspectionBatchAssignmentDto = {
  project?: GuidNullableEntityWithDisplayNameDto;
  propertyGroup?: GuidNullableEntityWithDisplayNameDto;
  assignedTeam?: GuidNullableEntityWithDisplayNameDto;
  plannedStartDate?: string | null;
  plannedCompletionDate?: string | null;
  area?: string | null;
  region?: string | null;
  suburb?: string | null;
  numProperties?: number;
  numPropertiesInspected?: number;
  numPropertiesNoAccess?: number;
  numMeters?: number;
  id?: string;
} | null;

export type ValidationErrorInfo = {
  message?: string | null;
  members?: string | null[] | null;
} | null;

export type ErrorInfo = {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
} | null;

export type InspectionBatchAssignmentDtoAjaxResponse = {
  result?: InspectionBatchAssignmentDto;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type AjaxResponseBase = {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type InspectionBatchAssignmentCreateDto = {
  projectId?: string;
  regionId?: string | null;
  propertyGroupId?: string;
  assignedTeamId?: string;
  plannedStartDate: string;
  plannedCompletionDate: string;
} | null;

export type InspectionBatchAssignmentDtoPagedResultDto = {
  totalCount?: number;
  items?: InspectionBatchAssignmentDto[] | null;
} | null;

export interface InspectionBatchAssignmentGetQueryParams {
  Id?: string;
}

export type InspectionBatchAssignmentGetProps = Omit<
  GetProps<InspectionBatchAssignmentDtoAjaxResponse, AjaxResponseBase, InspectionBatchAssignmentGetQueryParams>,
  'path'
>;

export const InspectionBatchAssignmentGet = (props: InspectionBatchAssignmentGetProps) => (
  <Get<InspectionBatchAssignmentDtoAjaxResponse, AjaxResponseBase, InspectionBatchAssignmentGetQueryParams>
    path={`/api/services/propertyInspection/InspectionBatchAssignment/Get`}
    {...props}
  />
);

export type UseInspectionBatchAssignmentGetProps = Omit<
  UseGetProps<InspectionBatchAssignmentDtoAjaxResponse, InspectionBatchAssignmentGetQueryParams>,
  'path'
>;

export const useInspectionBatchAssignmentGet = (props: UseInspectionBatchAssignmentGetProps) =>
  useGet<InspectionBatchAssignmentDtoAjaxResponse, AjaxResponseBase, InspectionBatchAssignmentGetQueryParams>(
    `/api/services/propertyInspection/InspectionBatchAssignment/Get`,
    props
  );

export type InspectionBatchAssignmentCreateProps = Omit<
  MutateProps<InspectionBatchAssignmentDtoAjaxResponse, AjaxResponseBase, void, InspectionBatchAssignmentCreateDto>,
  'path' | 'verb'
>;

export const InspectionBatchAssignmentCreate = (props: InspectionBatchAssignmentCreateProps) => (
  <Mutate<InspectionBatchAssignmentDtoAjaxResponse, AjaxResponseBase, void, InspectionBatchAssignmentCreateDto>
    verb="POST"
    path={`/api/services/propertyInspection/InspectionBatchAssignment/Create`}
    {...props}
  />
);

export type UseInspectionBatchAssignmentCreateProps = Omit<
  UseMutateProps<InspectionBatchAssignmentDtoAjaxResponse, void, InspectionBatchAssignmentCreateDto>,
  'path' | 'verb'
>;

export const useInspectionBatchAssignmentCreate = (props: UseInspectionBatchAssignmentCreateProps) =>
  useMutate<InspectionBatchAssignmentDtoAjaxResponse, AjaxResponseBase, void, InspectionBatchAssignmentCreateDto>(
    'POST',
    `/api/services/propertyInspection/InspectionBatchAssignment/Create`,
    props
  );

export type InspectionBatchAssignmentUpdateProps = Omit<
  MutateProps<InspectionBatchAssignmentDto, AjaxResponseBase, void, InspectionBatchAssignmentDto>,
  'path' | 'verb'
>;

export const InspectionBatchAssignmentUpdate = (props: InspectionBatchAssignmentUpdateProps) => (
  <Mutate<InspectionBatchAssignmentDto, AjaxResponseBase, void, InspectionBatchAssignmentDto>
    verb="PUT"
    path={`/api/services/propertyInspection/InspectionBatchAssignment/Update`}
    {...props}
  />
);

export type UseInspectionBatchAssignmentUpdateProps = Omit<
  UseMutateProps<InspectionBatchAssignmentDto, void, InspectionBatchAssignmentDto>,
  'path' | 'verb'
>;

export const useInspectionBatchAssignmentUpdate = (props: UseInspectionBatchAssignmentUpdateProps) =>
  useMutate<InspectionBatchAssignmentDto, AjaxResponseBase, void, InspectionBatchAssignmentDto>(
    'PUT',
    `/api/services/propertyInspection/InspectionBatchAssignment/Update`,
    props
  );

export interface InspectionBatchAssignmentGetAllQueryParams {
  Sorting?: string | null;
  SkipCount?: number;
  MaxResultCount?: number;
}

export type InspectionBatchAssignmentGetAllProps = Omit<
  GetProps<InspectionBatchAssignmentDtoPagedResultDto, AjaxResponseBase, InspectionBatchAssignmentGetAllQueryParams>,
  'path'
>;

export const InspectionBatchAssignmentGetAll = (props: InspectionBatchAssignmentGetAllProps) => (
  <Get<InspectionBatchAssignmentDtoPagedResultDto, AjaxResponseBase, InspectionBatchAssignmentGetAllQueryParams>
    path={`/api/services/propertyInspection/InspectionBatchAssignment/GetAll`}
    {...props}
  />
);

export type UseInspectionBatchAssignmentGetAllProps = Omit<
  UseGetProps<InspectionBatchAssignmentDtoPagedResultDto, InspectionBatchAssignmentGetAllQueryParams>,
  'path'
>;

export const useInspectionBatchAssignmentGetAll = (props: UseInspectionBatchAssignmentGetAllProps) =>
  useGet<InspectionBatchAssignmentDtoPagedResultDto, AjaxResponseBase, InspectionBatchAssignmentGetAllQueryParams>(
    `/api/services/propertyInspection/InspectionBatchAssignment/GetAll`,
    props
  );

export interface InspectionBatchAssignmentDeleteQueryParams {
  Id?: string;
}

export type InspectionBatchAssignmentDeleteProps = Omit<
  MutateProps<void, AjaxResponseBase, InspectionBatchAssignmentDeleteQueryParams, void>,
  'path' | 'verb'
>;

export const InspectionBatchAssignmentDelete = (props: InspectionBatchAssignmentDeleteProps) => (
  <Mutate<void, AjaxResponseBase, InspectionBatchAssignmentDeleteQueryParams, void>
    verb="DELETE"
    path={`/api/services/propertyInspection/InspectionBatchAssignment/Delete`}
    {...props}
  />
);

export type UseInspectionBatchAssignmentDeleteProps = Omit<
  UseMutateProps<void, InspectionBatchAssignmentDeleteQueryParams, void>,
  'path' | 'verb'
>;

export const useInspectionBatchAssignmentDelete = (props: UseInspectionBatchAssignmentDeleteProps) =>
  useMutate<void, AjaxResponseBase, InspectionBatchAssignmentDeleteQueryParams, void>(
    'DELETE',
    `/api/services/propertyInspection/InspectionBatchAssignment/Delete`,
    props
  );
