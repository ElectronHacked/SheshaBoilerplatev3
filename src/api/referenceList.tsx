/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';

export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;

export type ReferenceListItemDto = {
  item?: string | null;
  itemValue?: number;
  description?: string | null;
  orderIndex?: number;
  id?: string;
} | null;

export type ValidationErrorInfo = {
  message?: string | null;
  members?: string | null[] | null;
} | null;

export type ErrorInfo = {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
} | null;

export type ReferenceListItemDtoListAjaxResponse = {
  result?: ReferenceListItemDto[] | null;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type AjaxResponseBase = {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type ReferenceListDto = {
  name?: string | null;
  description?: string | null;
  hardLinkToApplication?: boolean;
  namespace?: string | null;
  noSelectionValue?: number | null;
  id?: string;
} | null;

export type ReferenceListDtoAjaxResponse = {
  result?: ReferenceListDto;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export type ReferenceListDtoPagedResultDto = {
  totalCount?: number;
  items?: ReferenceListDto[] | null;
} | null;

export type ReferenceListDtoPagedResultDtoAjaxResponse = {
  result?: ReferenceListDtoPagedResultDto;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
} | null;

export interface ReferenceListGetItemsQueryParams {
  namespace?: string | null;
  name?: string | null;
}

export type ReferenceListGetItemsProps = Omit<
  GetProps<ReferenceListItemDtoListAjaxResponse, AjaxResponseBase, ReferenceListGetItemsQueryParams>,
  'path'
>;

export const ReferenceListGetItems = (props: ReferenceListGetItemsProps) => (
  <Get<ReferenceListItemDtoListAjaxResponse, AjaxResponseBase, ReferenceListGetItemsQueryParams>
    path={`/api/services/app/ReferenceList/GetItems`}
    {...props}
  />
);

export type UseReferenceListGetItemsProps = Omit<
  UseGetProps<ReferenceListItemDtoListAjaxResponse, ReferenceListGetItemsQueryParams>,
  'path'
>;

export const useReferenceListGetItems = (props: UseReferenceListGetItemsProps) =>
  useGet<ReferenceListItemDtoListAjaxResponse, AjaxResponseBase, ReferenceListGetItemsQueryParams>(
    `/api/services/app/ReferenceList/GetItems`,
    props
  );

export interface ReferenceListGetQueryParams {
  Id?: string;
}

export type ReferenceListGetProps = Omit<
  GetProps<ReferenceListDtoAjaxResponse, AjaxResponseBase, ReferenceListGetQueryParams>,
  'path'
>;

export const ReferenceListGet = (props: ReferenceListGetProps) => (
  <Get<ReferenceListDtoAjaxResponse, AjaxResponseBase, ReferenceListGetQueryParams>
    path={`/api/services/app/ReferenceList/Get`}
    {...props}
  />
);

export type UseReferenceListGetProps = Omit<
  UseGetProps<ReferenceListDtoAjaxResponse, ReferenceListGetQueryParams>,
  'path'
>;

export const useReferenceListGet = (props: UseReferenceListGetProps) =>
  useGet<ReferenceListDtoAjaxResponse, AjaxResponseBase, ReferenceListGetQueryParams>(
    `/api/services/app/ReferenceList/Get`,
    props
  );

export interface ReferenceListGetAllQueryParams {
  Sorting?: string | null;
  SkipCount?: number;
  MaxResultCount?: number;
}

export type ReferenceListGetAllProps = Omit<
  GetProps<ReferenceListDtoPagedResultDtoAjaxResponse, AjaxResponseBase, ReferenceListGetAllQueryParams>,
  'path'
>;

export const ReferenceListGetAll = (props: ReferenceListGetAllProps) => (
  <Get<ReferenceListDtoPagedResultDtoAjaxResponse, AjaxResponseBase, ReferenceListGetAllQueryParams>
    path={`/api/services/app/ReferenceList/GetAll`}
    {...props}
  />
);

export type UseReferenceListGetAllProps = Omit<
  UseGetProps<ReferenceListDtoPagedResultDtoAjaxResponse, ReferenceListGetAllQueryParams>,
  'path'
>;

export const useReferenceListGetAll = (props: UseReferenceListGetAllProps) =>
  useGet<ReferenceListDtoPagedResultDtoAjaxResponse, AjaxResponseBase, ReferenceListGetAllQueryParams>(
    `/api/services/app/ReferenceList/GetAll`,
    props
  );

export type ReferenceListCreateProps = Omit<
  MutateProps<ReferenceListDtoAjaxResponse, AjaxResponseBase, void, ReferenceListDto>,
  'path' | 'verb'
>;

export const ReferenceListCreate = (props: ReferenceListCreateProps) => (
  <Mutate<ReferenceListDtoAjaxResponse, AjaxResponseBase, void, ReferenceListDto>
    verb="POST"
    path={`/api/services/app/ReferenceList/Create`}
    {...props}
  />
);

export type UseReferenceListCreateProps = Omit<
  UseMutateProps<ReferenceListDtoAjaxResponse, void, ReferenceListDto>,
  'path' | 'verb'
>;

export const useReferenceListCreate = (props: UseReferenceListCreateProps) =>
  useMutate<ReferenceListDtoAjaxResponse, AjaxResponseBase, void, ReferenceListDto>(
    'POST',
    `/api/services/app/ReferenceList/Create`,
    props
  );

export type ReferenceListUpdateProps = Omit<
  MutateProps<ReferenceListDtoAjaxResponse, AjaxResponseBase, void, ReferenceListDto>,
  'path' | 'verb'
>;

export const ReferenceListUpdate = (props: ReferenceListUpdateProps) => (
  <Mutate<ReferenceListDtoAjaxResponse, AjaxResponseBase, void, ReferenceListDto>
    verb="PUT"
    path={`/api/services/app/ReferenceList/Update`}
    {...props}
  />
);

export type UseReferenceListUpdateProps = Omit<
  UseMutateProps<ReferenceListDtoAjaxResponse, void, ReferenceListDto>,
  'path' | 'verb'
>;

export const useReferenceListUpdate = (props: UseReferenceListUpdateProps) =>
  useMutate<ReferenceListDtoAjaxResponse, AjaxResponseBase, void, ReferenceListDto>(
    'PUT',
    `/api/services/app/ReferenceList/Update`,
    props
  );

export interface ReferenceListDeleteQueryParams {
  Id?: string;
}

export type ReferenceListDeleteProps = Omit<
  MutateProps<void, unknown, ReferenceListDeleteQueryParams, void>,
  'path' | 'verb'
>;

export const ReferenceListDelete = (props: ReferenceListDeleteProps) => (
  <Mutate<void, unknown, ReferenceListDeleteQueryParams, void>
    verb="DELETE"
    path={`/api/services/app/ReferenceList/Delete`}
    {...props}
  />
);

export type UseReferenceListDeleteProps = Omit<
  UseMutateProps<void, ReferenceListDeleteQueryParams, void>,
  'path' | 'verb'
>;

export const useReferenceListDelete = (props: UseReferenceListDeleteProps) =>
  useMutate<void, unknown, ReferenceListDeleteQueryParams, void>(
    'DELETE',
    `/api/services/app/ReferenceList/Delete`,
    props
  );
